// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"SFkZYQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
